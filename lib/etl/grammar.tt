require 'treetop'
require 'etl/pdef'

module ETL
  grammar Grammar
    rule script
      sentence+
        <ScriptNode>
    end

    rule sentence
      comment /
      space? chunk opt:(space 'and' space chunk)* '.'
        <SentenceNode>
    end

    rule chunk
      creation / assignment / statement
    end

    rule statement
      verb:( verb/verbcalled ) arguments:( space a:argument (',' &(space argument) / !(space argument) '') )*
        <StatementNode>
    end

    rule space
      [\s]+ (blockcomment space)?
        <SpaceNode>
    end

    rule verbcalled
      '[' s:chunk ']'
        <VerbCalledNode>
    end

    rule verb
      [A-Za-z-]+
        <VerbNode>
    end

    rule argument
      (noun / math / number / text / verbcalled)
        <ArgumentNode>
    end

    rule assignment
      verb:( verb/verbcalled ) space noun space 'to' space argument
        <AssignmentNode>
    end

    rule noun
      it /
      ('the' space)? name:[A-Za-z-]+ q:("'" "s"? space property:noun)?
        <NounNode>
    end

    rule typednoun
      ('the' space)? type space ('of' space)? name:[A-Za-z-]+ q:("'" "s"? space property:noun)?
        <TypedNounNode>
    end

    rule creation
      "create" space typednoun as:(space "as" space argument)?
        <CreationNode>
    end

    rule it
      'them'
        <ItNode> /
      'their' q:(space property:noun)
        <ItNode> /
      'it' q:("s" space property:noun)?
        <ItNode>
    end

    rule math
      '(' base:number operations:(space op:mathoperator space n:number)+ ')'
        <MathNode>
    end

    rule mathoperator
      ('+' / '-' / '/' / '^' / '*')
        <MathOperatorNode>
    end

    rule struct
      [A-Za-z-]+
        <StructNode>
    end

    rule type
      ('number' / 'text' / 'struct' / 'verb')
        <BuiltinTypeNode> /
      struct
        <StructTypeNode>
    end

    rule number
      base:[0-9]+ point:('.' n:[0-9]+)?
        <NumberNode>
    end

    rule text
      '"' str:('\\' ["ne] / '\\' [0-7]+ / '\\x' [0-9a-fA-F] / !'"' .)* '"'
        <TextNode>
    end

    rule blockcomment
      "--[" comment:(!"]--" .)* "]--"
        <CommentNode>
    end

    rule comment
      space? "--" comment:(!"\n" .)* "\n"?
        <CommentNode>
    end
  end
end
