require 'treetop'
require 'etl/pdef'

module ETL
  grammar Grammar
    rule script
      sentence+
        <ScriptNode>
    end

    rule sentence
      space? statement opt:(space 'and' space statement)* '.'
        <SentenceNode>
    end

    rule statement
      verb:( verb/verbcalled ) arguments:( space a:argument (',' &(space? argument) / '') )*
        <StatementNode>
    end

    rule space
      [\s]+
        <SpaceNode>
    end

    rule verbcalled
      '[' s:statement ']'
        <VerbCalledNode>
    end

    rule verb
      [A-Za-z-]+
        <VerbNode>
    end

    rule argument
      (verbcalled / noun / math / type / number / text)
        <ArgumentNode>
    end

    rule noun
      ('the' space)? (type space ('of' space)?)? name:(it/[A-Za-z-])+ ("'" "s"? space property:noun)?
        <NounNode>
    end

    rule it
      'it'
        <ItNode>
    end

    rule math
      '(' base:number operations:(space op:mathoperator space n:number)+ ')'
        <MathNode>
    end

    rule mathoperator
      ('+' / '-' / '/' / '^' / '*')
        <MathOperatorNode>
    end

    rule struct
      [A-Za-z-]+
        <StructNode>
    end

    rule type
      ('number' / 'text' / 'struct' / 'verb')
        <BuiltinTypeNode> /
      struct
        <StructTypeNode>
    end

    rule number
      base:[0-9]+ point:('.' n:[0-9]+)?
        <NumberNode>
    end

    rule text
      '"' str:[^"]* '"'
        <TextNode>
    end
  end
end
